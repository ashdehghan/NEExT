[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "NEExT"
version = "0.2.10"
description = "Network Embedding Experimentation Toolkit - A powerful framework for graph analysis, embedding computation, and machine learning on graph-structured data"
readme = "README.md"
requires-python = ">=3.9,<3.13"
license = {text = "MIT"}
authors = [
    {name = "Ash Dehghan", email = "ash.dehghan@gmail.com"},
]
maintainers = [
    {name = "Ash Dehghan", email = "ash.dehghan@gmail.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = ["graph", "network", "embedding", "machine-learning", "graph-ml", "network-analysis"]

# Core dependencies - everything needed for test.py to work
dependencies = [
    # Data manipulation
    "numpy>=1.24.0,<2.0", # Use numpy 1.x for better compatibility
    "pandas>=2.0.0,<3",
    # Graph processing
    "networkx>=3.0,<4",
    "python-igraph>=0.10.0",
    "cairocffi>=1.3.0", # For igraph plotting support
    # Machine learning
    "scikit-learn>=1.3.0,<1.5", # Compatible with imbalanced-learn
    "xgboost>=1.7.0",
    "imbalanced-learn>=0.11.0,<0.13", # Compatible with sklearn
    # Graph embeddings
    "vectorizers>=0.2,<0.3",
    "scipy>=1.13.0", # 1.13.x supports Python 3.9
    # Core utilities
    "pydantic>=2.0.0",
    "tqdm>=4.64.0",
    "requests>=2.25.0", # For loading data from URLs
    # Force newer versions to avoid Python compatibility issues
    "numba>=0.58.0",
    "llvmlite>=0.41.0",
    "plotly>=6.2.0",
]

[project.optional-dependencies]
# Deep learning and GNN support
dgl = [
    "torch>=2.0.0,<3.0",
    "dgl>=1.1.0,<3.0",  # DGL 1.1+ supports PyTorch 2.0+
]

# Advanced features including visualization and hyperparameter tuning
advanced = [
    "umap-learn>=0.5.7,!=0.5.9.post2",  # Exclude problematic version
    "optuna>=3.0.0",
    "plotly>=5.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Documentation building
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.25.0",
    "sphinx-copybutton>=0.5.0",
    "myst-parser>=2.0.0",
    "nbsphinx>=0.9.0",
]

# For running experiments and notebooks
experiments = [
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "ipykernel>=6.0.0",
]

# All extras combined (without DGL - for non-deep learning users)
all = [
    "NEExT[advanced,dev,docs,experiments]",
]

# All extras with deep learning support
all-dl = [
    "NEExT[advanced,dev,docs,experiments,dgl]",
]

[project.urls]
Homepage = "https://github.com/ashdehghan/NEExT"
Documentation = "https://neext.readthedocs.io"
Repository = "https://github.com/ashdehghan/NEExT"
Issues = "https://github.com/ashdehghan/NEExT/issues"

[tool.hatch.version]
path = "NEExT/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/.pytest_cache",
    "/.venv",
    "/.git",
    "/__pycache__",
    "/dist",
    "/build",
    "*.pyc",
    "*.pyo",
    "*.egg-info",
    "uv.lock",
    ".gitignore",
    "pyproject.toml.backup",
]

[tool.hatch.build.targets.wheel]
packages = ["NEExT"]

[tool.ruff]
line-length = 150
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.black]
line-length = 150
target-version = ["py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 150

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"
